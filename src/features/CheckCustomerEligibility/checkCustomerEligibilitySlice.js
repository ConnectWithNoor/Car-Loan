import { createSlice } from '@reduxjs/toolkit';

const initialState = {
  isEligible: null,
  isLoading: false,
  error: null,
};

export const checkCustomerEligibilitySlice = createSlice({
  name: 'checkCustomerEligibility',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {},
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder
      .addMatcher(
        (action) =>
          action.type.split('/')[0] === 'CheckCustomerEligibility' &&
          action.type.endsWith('/pending'),
        (state) => {
          state.isLoading = true;
        }
      )
      .addMatcher(
        (action) =>
          action.type.split('/')[0] === 'CheckCustomerEligibility' &&
          action.type.endsWith('/fulfilled'),
        (state, action) => {
          state.isLoading = false;
          state.isEligible = action.payload.isEligible;
        }
      )
      .addMatcher(
        (action) =>
          action.type.split('/')[0] === 'CheckCustomerEligibility' &&
          action.type.endsWith('/rejected'),
        (state, action) => {
          state.isLoading = false;
          state.error = action.payload;
        }
      );
  },
});

export const selectIsEligible = (state) => state.eligibility.isEligible;
export const selectIsLoading = (state) => state.eligibility.isLoading;
export const selectError = (state) => state.eligibility.error;

export default checkCustomerEligibilitySlice.reducer;
